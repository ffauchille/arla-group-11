# This is a basic workflow to help you get started with Actions
name: Deploy CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  pull_request:
    branches: [master]
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  api-unit-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14
      - run: |
          cd api/
          npm install
          npm test

  # This workflow contains a single job called "build"
  build-and-deploy-ci-api:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: [api-unit-test]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Build and publish docker image
        run: |
          docker build --build-arg db_host=${{ secrets.RDS_CI_HOST }} --build-arg db_port=${{ secrets.RDS_CI_PORT }} --build-arg db_name=${{ secrets.RDS_CI_NAME }} --build-arg db_user=${{ secrets.RDS_CI_USER }} --build-arg db_password=${{ secrets.RDS_CI_PASSWORD }} --build-arg doc_db_host=${{ secrets.DOC_DB_HOST }} --build-arg doc_db_port=${{ secrets.DOC_DB_PORT }} --build-arg doc_db_name=${{ secrets.DOC_DB_NAME }} --build-arg doc_db_user=${{ secrets.DOC_DB_USER }} --build-arg doc_db_password=${{ secrets.DOC_DB_PASSWORD }} -t docker.pkg.github.com/ffauchille/arla-group-11/arlaide-api-ci:${{ github.sha }} api/
          docker login docker.pkg.github.com -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker push docker.pkg.github.com/ffauchille/arla-group-11/arlaide-api-ci:${{ github.sha }}
      # Runs a set of commands using the runners shell
      - name: Deploy on production VM
        uses: appleboy/ssh-action@master
        env:
          TAG: ${{ github.sha }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          envs: TAG
          script: |
            docker login docker.pkg.github.com -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}
            docker pull docker.pkg.github.com/ffauchille/arla-group-11/arlaide-api-ci:$TAG
            (docker stop arlaide-api-ci && docker rm arlaide-api-ci) || echo "Nothing to stop..."
            docker run -d --network web --name arlaide-api-ci --label traefik.enable=true --label traefik.docker.network=web --label traefik.frontend.rule=Host:k8s.ci.api.${{ secrets.SSH_HOST }} --label traefik.frontend.port=3000 docker.pkg.github.com/ffauchille/arla-group-11/arlaide-api-ci:$TAG

  build-and-deploy-frontend-ci:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Build and publish docker image
        run: |
          docker build --build-arg api_url=https://ci.api.${{ secrets.SSH_HOST }} -t docker.pkg.github.com/ffauchille/arla-group-11/arlaide-ci:${{ github.sha }} .
          docker login docker.pkg.github.com -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker push docker.pkg.github.com/ffauchille/arla-group-11/arlaide-ci:${{ github.sha }}
      # Runs a set of commands using the runners shell
      - name: Deploy on production VM
        uses: appleboy/ssh-action@master
        env:
          TAG: ${{ github.sha }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          envs: TAG
          script: |
            echo "TAG: $TAG"
            docker login docker.pkg.github.com -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}
            docker pull docker.pkg.github.com/ffauchille/arla-group-11/arlaide-ci:$TAG
            (docker stop arlaide-ci && docker rm arlaide-ci) || echo "Nothing to stop..."
            docker run -d --network web --name arlaide-ci --label traefik.enable=true --label traefik.docker.network=web --label traefik.frontend.rule=Host:k8s.ci.${{ secrets.SSH_HOST }} --label traefik.frontend.port=80 docker.pkg.github.com/ffauchille/arla-group-11/arlaide-ci:$TAG

  functional-test:
    needs: [build-and-deploy-ci-api]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14
      - run: |
          cd cucumber/
          npm install
          AUTH_API_SECRET=${{ secrets.AUTH_API_SECRET }} npm run test:ci

